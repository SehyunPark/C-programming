Grading at Tue Aug 14 00:17:21 UTC 2018
Compiling your code
rm test poker cards.o my-test-main.o *~
Makefile:10: recipe for target 'clean' failed
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==170== Memcheck, a memory error detector
==170== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==170== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==170== Command: ./test-eval inp.2.txt
==170== Parent PID: 169
==170== 
==170== Invalid read of size 8
==170==    at 0x40148B: card_ptr_comp (eval.c:9)
==170==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==170==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==170==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==170==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==170==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==170==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==170==    by 0x4E7369E: qsort_r (msort.c:297)
==170==    by 0x401BA1: compare_hands (eval.c:247)
==170==    by 0x402B26: main (test-eval.c:124)
==170==  Address 0x5207518 is 0 bytes after a block of size 40 alloc'd
==170==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==170==    by 0x40103A: add_card_to (deck-c4.c:29)
==170==    by 0x40324B: hand_from_string (input.c:49)
==170==    by 0x402B0F: main (test-eval.c:123)
==170== 
==170== Invalid read of size 4
==170==    at 0x40148E: card_ptr_comp (eval.c:9)
==170==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==170==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==170==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==170==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==170==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==170==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==170==    by 0x4E7369E: qsort_r (msort.c:297)
==170==    by 0x401BA1: compare_hands (eval.c:247)
==170==    by 0x402B26: main (test-eval.c:124)
==170==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==170== 
==170== 
==170== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==170==  Access not within mapped region at address 0x0
==170==    at 0x40148E: card_ptr_comp (eval.c:9)
==170==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==170==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==170==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==170==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==170==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==170==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==170==    by 0x4E7369E: qsort_r (msort.c:297)
==170==    by 0x401BA1: compare_hands (eval.c:247)
==170==    by 0x402B26: main (test-eval.c:124)
==170==  If you believe this happened as a result of a stack
==170==  overflow in your program's main thread (unlikely but
==170==  possible), you can try to increase the size of the
==170==  main thread stack using the --main-stacksize= flag.
==170==  The main thread stack size used in this run was 8388608.
==170== 
==170== HEAP SUMMARY:
==170==     in use at exit: 880 bytes in 17 blocks
==170==   total heap usage: 56 allocs, 39 frees, 9,768 bytes allocated
==170== 
==170== LEAK SUMMARY:
==170==    definitely lost: 0 bytes in 0 blocks
==170==    indirectly lost: 0 bytes in 0 blocks
==170==      possibly lost: 0 bytes in 0 blocks
==170==    still reachable: 880 bytes in 17 blocks
==170==         suppressed: 0 bytes in 0 blocks
==170== Rerun with --leak-check=full to see details of leaked memory
==170== 
==170== For counts of detected and suppressed errors, rerun with: -v
==170== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Line_8_did_not_match
Line_16_did_not_match
Line_28_did_not_match
Line_36_did_not_match
Line_39_did_not_match
Line_48_did_not_match
Line_56_did_not_match
Line_68_did_not_match
Line_76_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh Qc 5h 
Hand 2:								Hand 2:
--------							--------
Jc Jd Jh 7c 5h 2c 						Jc Jd Jh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value J)	 - The most of a kind is 3 of a kind (at index 0 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Jc Jd Jh 7c 5h 		      |	 - 5 cards used for hand: Jc Jd Jh Jc 5h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh Qc 5h 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh 8c 5h 2c 						Qc Qd Qh 8c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 8c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh Qc 5h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!						      |	Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh Qc 5h 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh 7c 4h 2c 						Qc Qd Qh 7c 4h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 4h 		      |	 - 5 cards used for hand: Qc Qd Qh Qc 4h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Qc Qd Qh 7c 5h 2c 						Qc Qd Qh 7c 5h 2c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh Qc 5h 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh 7c 5h 3c 						Qc Qd Qh 7c 5h 3c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 0 / value Q)	 - The most of a kind is 3 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh 7c 5h 		      |	 - 5 cards used for hand: Qc Qd Qh Qc 5h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
As Kc Qc Qd Qh 7c 						As Kc Qc Qd Qh 7c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 2 / value Q)	 - The most of a kind is 3 of a kind (at index 2 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh As Kc 			 - 5 cards used for hand: Qc Qd Qh As Kc 
Hand 2:								Hand 2:
--------							--------
As Qc Jc Jd Jh 7c 						As Qc Jc Jd Jh 7c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 2 / value J)	 - The most of a kind is 3 of a kind (at index 2 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Jc Jd Jh As Qc 			 - 5 cards used for hand: Jc Jd Jh As Qc 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Kc Jc Jd Jh 7c 						As Kc Jc Jd Jh 7c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 2 / value J)	 - The most of a kind is 3 of a kind (at index 2 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Jc Jd Jh As Kc 			 - 5 cards used for hand: Jc Jd Jh As Kc 
Hand 2:								Hand 2:
--------							--------
As Qc Jc Jd Jh 7c 						As Qc Jc Jd Jh 7c 
 - No flush							 - No flush
 - The most of a kind is 3 of a kind (at index 2 / value J)	 - The most of a kind is 3 of a kind (at index 2 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: THREE_OF_A_KIND			 - evaluate_hand's ranking: THREE_OF_A_KIND
 - 5 cards used for hand: Jc Jd Jh As Qc 			 - 5 cards used for hand: Jc Jd Jh As Qc 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 5: Trying hands with straights
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==224== Memcheck, a memory error detector
==224== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==224== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==224== Command: ./test-eval inp.7.txt
==224== Parent PID: 223
==224== 
==224== Invalid read of size 8
==224==    at 0x40148B: card_ptr_comp (eval.c:9)
==224==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==224==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==224==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==224==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==224==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==224==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==224==    by 0x4E7369E: qsort_r (msort.c:297)
==224==    by 0x401BA1: compare_hands (eval.c:247)
==224==    by 0x402B26: main (test-eval.c:124)
==224==  Address 0x520e940 is 0 bytes after a block of size 48 alloc'd
==224==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==224==    by 0x40103A: add_card_to (deck-c4.c:29)
==224==    by 0x40324B: hand_from_string (input.c:49)
==224==    by 0x402B0F: main (test-eval.c:123)
==224== 
==224== Invalid read of size 4
==224==    at 0x40148E: card_ptr_comp (eval.c:9)
==224==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==224==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==224==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==224==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==224==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==224==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==224==    by 0x4E7369E: qsort_r (msort.c:297)
==224==    by 0x401BA1: compare_hands (eval.c:247)
==224==    by 0x402B26: main (test-eval.c:124)
==224==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==224== 
==224== 
==224== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==224==  Access not within mapped region at address 0x0
==224==    at 0x40148E: card_ptr_comp (eval.c:9)
==224==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==224==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==224==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==224==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==224==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==224==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==224==    by 0x4E7369E: qsort_r (msort.c:297)
==224==    by 0x401BA1: compare_hands (eval.c:247)
==224==    by 0x402B26: main (test-eval.c:124)
==224==  If you believe this happened as a result of a stack
==224==  overflow in your program's main thread (unlikely but
==224==  possible), you can try to increase the size of the
==224==  main thread stack using the --main-stacksize= flag.
==224==  The main thread stack size used in this run was 8388608.
==224== 
==224== HEAP SUMMARY:
==224==     in use at exit: 912 bytes in 19 blocks
==224==   total heap usage: 386 allocs, 367 frees, 16,504 bytes allocated
==224== 
==224== LEAK SUMMARY:
==224==    definitely lost: 0 bytes in 0 blocks
==224==    indirectly lost: 0 bytes in 0 blocks
==224==      possibly lost: 0 bytes in 0 blocks
==224==    still reachable: 912 bytes in 19 blocks
==224==         suppressed: 0 bytes in 0 blocks
==224== Rerun with --leak-check=full to see details of leaked memory
==224== 
==224== For counts of detected and suppressed errors, rerun with: -v
==224== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
 Checking the output 
Line_8_did_not_match
Line_16_did_not_match
Line_28_did_not_match
Line_36_did_not_match
Line_39_did_not_match
Line_48_did_not_match
Line_68_did_not_match
Line_88_did_not_match
Line_96_did_not_match
Line_108_did_not_match
Line_116_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks Kc 
Hand 2:								Hand 2:
--------							--------
Kc Kd Kh Ks 8c 6d 						Kc Kd Kh Ks 8c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks Kc 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks Kc 
Hand 2:								Hand 2:
--------							--------
Kc Kd Kh Ks 9d 8c 						Kc Kd Kh Ks 9d 8c 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 9d 		      |	 - 5 cards used for hand: Kc Kd Kh Ks Kc 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!						      |	Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks Kc 
Hand 2:								Hand 2:
--------							--------
As Kc Kd Kh Ks 4d 						As Kc Kd Kh Ks 4d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 1 / value K)	 - The most of a kind is 4 of a kind (at index 1 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks As 			 - 5 cards used for hand: Kc Kd Kh Ks As 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks Kc 
Hand 2:								Hand 2:
--------							--------
Ac As Kc Kd Kh Ks 						Ac As Kc Kd Kh Ks 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 2 / value K)	 - The most of a kind is 4 of a kind (at index 2 / value K)
 - Secondary pair at index 0 (value A)				 - Secondary pair at index 0 (value A)
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks Ac 			 - 5 cards used for hand: Kc Kd Kh Ks Ac 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks Kc 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh Qs 8c 6d 						Qc Qd Qh Qs 8c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value Q)	 - The most of a kind is 4 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh Qs 8c 		      |	 - 5 cards used for hand: Qc Qd Qh Qs Qc 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Kd Kh Ks 8c 7d 						Kc Kd Kh Ks 8c 7d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value K)	 - The most of a kind is 4 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Kc Kd Kh Ks 8c 		      |	 - 5 cards used for hand: Kc Kd Kh Ks Kc 
Hand 2:								Hand 2:
--------							--------
Qc Qd Qh Qs 9c 6d 						Qc Qd Qh Qs 9c 6d 
 - No flush							 - No flush
 - The most of a kind is 4 of a kind (at index 0 / value Q)	 - The most of a kind is 4 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FOUR_OF_A_KIND			 - evaluate_hand's ranking: FOUR_OF_A_KIND
 - 5 cards used for hand: Qc Qd Qh Qs 9c 		      |	 - 5 cards used for hand: Qc Qd Qh Qs Qc 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 9: Trying hands with straight flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==254== Memcheck, a memory error detector
==254== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==254== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==254== Command: ./test-eval inp.10.txt
==254== Parent PID: 253
==254== 
==254== Invalid read of size 8
==254==    at 0x40148B: card_ptr_comp (eval.c:9)
==254==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==254==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==254==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==254==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==254==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==254==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==254==    by 0x4E7369E: qsort_r (msort.c:297)
==254==    by 0x401BA1: compare_hands (eval.c:247)
==254==    by 0x402B26: main (test-eval.c:124)
==254==  Address 0x520b2b8 is 0 bytes after a block of size 40 alloc'd
==254==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==254==    by 0x40103A: add_card_to (deck-c4.c:29)
==254==    by 0x40324B: hand_from_string (input.c:49)
==254==    by 0x402B0F: main (test-eval.c:123)
==254== 
==254== Invalid read of size 4
==254==    at 0x40148E: card_ptr_comp (eval.c:9)
==254==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==254==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==254==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==254==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==254==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==254==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==254==    by 0x4E7369E: qsort_r (msort.c:297)
==254==    by 0x401BA1: compare_hands (eval.c:247)
==254==    by 0x402B26: main (test-eval.c:124)
==254==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==254== 
==254== 
==254== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==254==  Access not within mapped region at address 0x0
==254==    at 0x40148E: card_ptr_comp (eval.c:9)
==254==    by 0x4E73231: msort_with_tmp.part.0 (msort.c:83)
==254==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==254==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==254==    by 0x4E72EDC: msort_with_tmp (msort.c:45)
==254==    by 0x4E72EDC: msort_with_tmp.part.0 (msort.c:54)
==254==    by 0x4E7369E: msort_with_tmp (msort.c:45)
==254==    by 0x4E7369E: qsort_r (msort.c:297)
==254==    by 0x401BA1: compare_hands (eval.c:247)
==254==    by 0x402B26: main (test-eval.c:124)
==254==  If you believe this happened as a result of a stack
==254==  overflow in your program's main thread (unlikely but
==254==  possible), you can try to increase the size of the
==254==  main thread stack using the --main-stacksize= flag.
==254==  The main thread stack size used in this run was 8388608.
==254== 
==254== HEAP SUMMARY:
==254==     in use at exit: 880 bytes in 17 blocks
==254==   total heap usage: 234 allocs, 217 frees, 13,124 bytes allocated
==254== 
==254== LEAK SUMMARY:
==254==    definitely lost: 0 bytes in 0 blocks
==254==    indirectly lost: 0 bytes in 0 blocks
==254==      possibly lost: 0 bytes in 0 blocks
==254==    still reachable: 880 bytes in 17 blocks
==254==         suppressed: 0 bytes in 0 blocks
==254== Rerun with --leak-check=full to see details of leaked memory
==254== 
==254== For counts of detected and suppressed errors, rerun with: -v
==254== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: F
