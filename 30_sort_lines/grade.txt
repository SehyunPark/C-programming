Grading at Fri Aug 24 21:25:43 UTC 2018
Attempting to compile sortLines.c
#################################################
testcase1:
testcase1 failed, your program didn't indicate this is a failure case
#################################################
testcase2:
Your output is correct
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase3:
Your output is correct
  - Valgrind showed memory leaks
valgrind was not clean
==349== Memcheck, a memory error detector
==349== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==349== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==349== 
==349== Parent PID: 348
==349== 
==349== 
==349== HEAP SUMMARY:
==349==     in use at exit: 552 bytes in 1 blocks
==349==   total heap usage: 15 allocs, 14 frees, 10,136 bytes allocated
==349== 
==349== LEAK SUMMARY:
==349==    definitely lost: 0 bytes in 0 blocks
==349==    indirectly lost: 0 bytes in 0 blocks
==349==      possibly lost: 0 bytes in 0 blocks
==349==    still reachable: 552 bytes in 1 blocks
==349==         suppressed: 0 bytes in 0 blocks
==349== Reachable blocks (those to which a pointer was found) are not shown.
==349== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==349== 
==349== For counts of detected and suppressed errors, rerun with: -v
==349== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
#################################################
testcase4:
Your output is correct
  - Valgrind showed memory leaks
valgrind was not clean
==367== Memcheck, a memory error detector
==367== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==367== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==367== 
==367== Parent PID: 366
==367== 
==367== 
==367== HEAP SUMMARY:
==367==     in use at exit: 1,104 bytes in 2 blocks
==367==   total heap usage: 31 allocs, 29 frees, 16,344 bytes allocated
==367== 
==367== LEAK SUMMARY:
==367==    definitely lost: 0 bytes in 0 blocks
==367==    indirectly lost: 0 bytes in 0 blocks
==367==      possibly lost: 0 bytes in 0 blocks
==367==    still reachable: 1,104 bytes in 2 blocks
==367==         suppressed: 0 bytes in 0 blocks
==367== Reachable blocks (those to which a pointer was found) are not shown.
==367== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==367== 
==367== For counts of detected and suppressed errors, rerun with: -v
==367== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Overall Grade: C
